Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 F: %empty

    3 W: %empty

    4 D: %empty

    5 X: %empty

    6 N: %empty

    7 changetable: %empty

    8 primary_expression: IDENTIFIER
    9                   | INTEGER_CONSTANT
   10                   | FLOATING_CONSTANT
   11                   | CHARACTER_CONSTANT
   12                   | STRING_LITERAL
   13                   | '(' expression ')'

   14 postfix_expression: primary_expression
   15                   | postfix_expression '[' expression ']'
   16                   | postfix_expression '(' argument_expression_list_opt ')'
   17                   | postfix_expression '.' IDENTIFIER
   18                   | postfix_expression ARROW IDENTIFIER
   19                   | postfix_expression INC
   20                   | postfix_expression DEC
   21                   | '(' type_name ')' '{' initializer_list '}'
   22                   | '(' type_name ')' '{' initializer_list COMMA '}'

   23 argument_expression_list: assignment_expression
   24                         | argument_expression_list COMMA assignment_expression

   25 argument_expression_list_opt: argument_expression_list
   26                             | %empty

   27 unary_expression: postfix_expression
   28                 | INC unary_expression
   29                 | DEC unary_expression
   30                 | unary_operator cast_expression
   31                 | SIZEOF unary_expression
   32                 | SIZEOF '(' type_name ')'

   33 unary_operator: BITWISE_AND
   34               | MUL
   35               | ADD
   36               | SUB
   37               | BITWISE_NOT
   38               | '!'

   39 cast_expression: unary_expression
   40                | '(' type_name ')' cast_expression

   41 multiplicative_expression: cast_expression
   42                          | multiplicative_expression MUL cast_expression
   43                          | multiplicative_expression DIV cast_expression
   44                          | multiplicative_expression MOD cast_expression

   45 additive_expression: multiplicative_expression
   46                    | additive_expression ADD multiplicative_expression
   47                    | additive_expression SUB multiplicative_expression

   48 shift_expression: additive_expression
   49                 | shift_expression SHIFT_LEFT additive_expression
   50                 | shift_expression SHIFT_RIGHT additive_expression

   51 relational_expression: shift_expression
   52                      | relational_expression LT shift_expression
   53                      | relational_expression GT shift_expression
   54                      | relational_expression LTE shift_expression
   55                      | relational_expression GTE shift_expression

   56 equality_expression: relational_expression
   57                    | equality_expression EQ relational_expression
   58                    | equality_expression NEQ relational_expression

   59 AND_expression: equality_expression
   60               | AND_expression BITWISE_AND equality_expression

   61 exclusive_OR_expression: AND_expression
   62                        | exclusive_OR_expression BITWISE_XOR AND_expression

   63 inclusive_OR_expression: exclusive_OR_expression
   64                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   65 logical_AND_expression: inclusive_OR_expression
   66                       | logical_AND_expression AND M inclusive_OR_expression

   67 logical_OR_expression: logical_AND_expression
   68                      | logical_OR_expression OR M logical_AND_expression

   69 conditional_expression: logical_OR_expression
   70                       | logical_OR_expression N '?' M expression N COLON M conditional_expression

   71 assignment_expression: conditional_expression
   72                      | unary_expression assignment_operator assignment_expression

   73 assignment_operator: ASSIGN
   74                    | MUL_EQ
   75                    | DIV_EQ
   76                    | MOD_EQ
   77                    | ADD_EQ
   78                    | SUB_EQ
   79                    | SHIFT_LEFT_EQ
   80                    | SHIFT_RIGHT_EQ
   81                    | BITWISE_AND_EQ
   82                    | BITWISE_XOR_EQ
   83                    | BITWISE_OR_EQ

   84 expression: assignment_expression
   85           | expression COMMA assignment_expression

   86 constant_expression: conditional_expression

   87 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   88 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   89                       | type_specifier declaration_specifiers_opt
   90                       | type_qualifier declaration_specifiers_opt
   91                       | function_specifier declaration_specifiers_opt

   92 declaration_specifiers_opt: declaration_specifiers
   93                           | %empty

   94 init_declarator_list: init_declarator
   95                     | init_declarator_list COMMA init_declarator

   96 init_declarator_list_opt: init_declarator_list
   97                         | %empty

   98 init_declarator: declarator
   99                | declarator ASSIGN initializer

  100 storage_class_specifier: EXTERN
  101                        | STATIC
  102                        | AUTO
  103                        | REGISTER

  104 type_specifier: VOID
  105               | CHAR
  106               | SHORT
  107               | INT
  108               | LONG
  109               | FLOAT
  110               | DOUBLE
  111               | SIGNED
  112               | UNSIGNED
  113               | _BOOL
  114               | _COMPLEX
  115               | _IMAGINARY
  116               | enum_specifier

  117 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  118                         | type_qualifier specifier_qualifier_list_opt

  119 specifier_qualifier_list_opt: specifier_qualifier_list
  120                             | %empty

  121 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  122               | ENUM identifier_opt '{' enumerator_list COMMA '}'
  123               | ENUM IDENTIFIER

  124 identifier_opt: IDENTIFIER
  125               | %empty

  126 enumerator_list: enumerator
  127                | enumerator_list COMMA enumerator

  128 enumerator: ENUMERATION_CONSTANT
  129           | ENUMERATION_CONSTANT ASSIGN constant_expression

  130 type_qualifier: CONST
  131               | RESTRICT
  132               | VOLATILE

  133 function_specifier: INLINE

  134 declarator: pointer direct_declarator
  135           | direct_declarator

  136 direct_declarator: IDENTIFIER
  137                  | '(' declarator ')'
  138                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  139                  | direct_declarator '[' type_qualifier_list ']'
  140                  | direct_declarator '[' assignment_expression ']'
  141                  | direct_declarator '[' ']'
  142                  | direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']'
  143                  | direct_declarator '[' type_qualifier_list MUL ']'
  144                  | direct_declarator '[' MUL ']'
  145                  | direct_declarator '(' changetable parameter_type_list ')'
  146                  | direct_declarator '(' identifier_list ')'
  147                  | direct_declarator '(' changetable ')'

  148 pointer: MUL type_qualifier_list_opt
  149        | MUL type_qualifier_list_opt pointer

  150 type_qualifier_list: type_qualifier
  151                    | type_qualifier_list type_qualifier

  152 type_qualifier_list_opt: type_qualifier_list
  153                        | %empty

  154 parameter_type_list: parameter_list
  155                    | parameter_list COMMA ELLIPSIS

  156 parameter_list: parameter_declaration
  157               | parameter_list COMMA parameter_declaration

  158 parameter_declaration: declaration_specifiers declarator
  159                      | declaration_specifiers

  160 identifier_list: IDENTIFIER
  161                | identifier_list COMMA IDENTIFIER

  162 type_name: specifier_qualifier_list

  163 initializer: assignment_expression
  164            | '{' initializer_list '}'
  165            | '{' initializer_list COMMA '}'

  166 initializer_list: designation_opt initializer
  167                 | initializer_list COMMA designation_opt initializer

  168 designation_opt: designation
  169                | %empty

  170 designation: designator_list ASSIGN

  171 designator_list: designator
  172                | designator_list designator

  173 designator: '[' constant_expression ']'
  174           | '.' IDENTIFIER

  175 statement: labeled_statement
  176          | compound_statement
  177          | expression_statement
  178          | selection_statement
  179          | iteration_statement
  180          | jump_statement

  181 loop_statement: labeled_statement
  182               | expression_statement
  183               | selection_statement
  184               | iteration_statement
  185               | jump_statement

  186 labeled_statement: IDENTIFIER COLON M statement
  187                  | CASE constant_expression COLON statement
  188                  | DEFAULT COLON statement

  189 compound_statement: '{' X changetable block_item_list_opt '}'

  190 block_item_list: block_item
  191                | block_item_list M block_item

  192 block_item_list_opt: block_item_list
  193                    | %empty

  194 block_item: declaration
  195           | statement

  196 expression_statement: expression SEMICOLON
  197                     | SEMICOLON

  198 selection_statement: IF '(' expression N ')' M statement N
  199                    | IF '(' expression N ')' M statement N ELSE M statement
  200                    | SWITCH '(' expression ')' statement

  201 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement
  202                    | WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}'
  203                    | DO D M loop_statement M WHILE '(' expression ')' SEMICOLON
  204                    | DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON
  205                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

  209 jump_statement: GOTO IDENTIFIER SEMICOLON
  210               | CONTINUE SEMICOLON
  211               | BREAK SEMICOLON
  212               | RETURN expression SEMICOLON
  213               | RETURN SEMICOLON

  214 translation_unit: external_declaration
  215                 | translation_unit external_declaration

  216 external_declaration: function_definition
  217                     | declaration

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}'

  219 declaration_list_opt: declaration_list
  220                     | %empty

  221 declaration_list: declaration
  222                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 38
    '(' (40) 13 16 21 22 32 40 137 145 146 147 198 199 200 201 202 203 204 205 206 207 208
    ')' (41) 13 16 21 22 32 40 137 145 146 147 198 199 200 201 202 203 204 205 206 207 208
    '.' (46) 17 174
    '?' (63) 70
    '[' (91) 15 138 139 140 141 142 143 144 173
    ']' (93) 15 138 139 140 141 142 143 144 173
    '{' (123) 21 22 121 122 164 165 189 202 204 207 208 218
    '}' (125) 21 22 121 122 164 165 189 202 204 207 208 218
    error (256)
    AUTO (258) 102
    BREAK (259) 211
    CASE (260) 187
    CHAR (261) 105
    CONST (262) 130
    CONTINUE (263) 210
    DEFAULT (264) 188
    DO (265) 203 204
    DOUBLE (266) 110
    ELSE (267) 199
    ENUM (268) 121 122 123
    EXTERN (269) 100
    FLOAT (270) 109
    FOR (271) 205 206 207 208
    GOTO (272) 209
    IF (273) 198 199
    INLINE (274) 133
    INT (275) 107
    LONG (276) 108
    REGISTER (277) 103
    RESTRICT (278) 131
    RETURN (279) 212 213
    SHORT (280) 106
    SIGNED (281) 111
    SIZEOF (282) 31 32
    STATIC (283) 101 142
    STRUCT (284)
    SWITCH (285) 200
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 112
    VOID (289) 104
    VOLATILE (290) 132
    WHILE (291) 201 202 203 204
    _BOOL (292) 113
    _COMPLEX (293) 114
    _IMAGINARY (294) 115
    IDENTIFIER <smb> (295) 8 17 18 123 124 136 160 161 174 186 209
    INTEGER_CONSTANT <intval> (296) 9
    FLOATING_CONSTANT <char_val> (297) 10
    CHARACTER_CONSTANT <char_val> (298) 11
    STRING_LITERAL <char_val> (299) 12
    ENUMERATION_CONSTANT <char_val> (300) 128 129
    ARROW (301) 18
    INC (302) 19 28
    DEC (303) 20 29
    MUL (304) 34 42 143 144 148 149
    ADD (305) 35 46
    SUB (306) 36 47
    DIV (307) 43
    MOD (308) 44
    SHIFT_LEFT (309) 49
    SHIFT_RIGHT (310) 50
    LT (311) 52
    GT (312) 53
    LTE (313) 54
    GTE (314) 55
    EQ (315) 57
    NEQ (316) 58
    BITWISE_XOR (317) 62
    BITWISE_OR (318) 64
    BITWISE_NOT (319) 37
    BITWISE_AND (320) 33 60
    AND (321) 66
    OR (322) 68
    COLON (323) 70 186 187 188
    SEMICOLON (324) 87 196 197 203 204 209 210 211 212 213
    ELLIPSIS (325) 155
    ASSIGN (326) 73 99 129 170
    MUL_EQ (327) 74
    DIV_EQ (328) 75
    MOD_EQ (329) 76
    ADD_EQ (330) 77
    SUB_EQ (331) 78
    SHIFT_LEFT_EQ (332) 79
    SHIFT_RIGHT_EQ (333) 80
    BITWISE_AND_EQ (334) 81
    BITWISE_XOR_EQ (335) 82
    BITWISE_OR_EQ (336) 83
    COMMA (337) 22 24 85 95 122 127 155 157 161 165 167
    HASH (338)
    "then" (339)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    M <instr_num> (95)
        on left: 1
        on right: 66 68 70 186 191 198 199 201 202 203 204 205 206 207 208
    F (96)
        on left: 2
        on right: 205 206 207 208
    W (97)
        on left: 3
        on right: 201 202
    D (98)
        on left: 4
        on right: 203 204
    X (99)
        on left: 5
        on right: 189 201 202 205 206 207 208
    N <stmt> (100)
        on left: 6
        on right: 70 198 199 205 206 207 208
    changetable (101)
        on left: 7
        on right: 145 147 189 201 202 205 206 207 208 218
    primary_expression <exprss> (102)
        on left: 8 9 10 11 12 13
        on right: 14
    postfix_expression <Arr> (103)
        on left: 14 15 16 17 18 19 20 21 22
        on right: 15 16 17 18 19 20 27
    argument_expression_list <param_num> (104)
        on left: 23 24
        on right: 24 25
    argument_expression_list_opt <param_num> (105)
        on left: 25 26
        on right: 16
    unary_expression <Arr> (106)
        on left: 27 28 29 30 31 32
        on right: 28 29 31 39 72
    unary_operator <u_op> (107)
        on left: 33 34 35 36 37 38
        on right: 30
    cast_expression <Arr> (108)
        on left: 39 40
        on right: 30 40 41 42 43 44
    multiplicative_expression <exprss> (109)
        on left: 41 42 43 44
        on right: 42 43 44 45 46 47
    additive_expression <exprss> (110)
        on left: 45 46 47
        on right: 46 47 48 49 50
    shift_expression <exprss> (111)
        on left: 48 49 50
        on right: 49 50 51 52 53 54 55
    relational_expression <exprss> (112)
        on left: 51 52 53 54 55
        on right: 52 53 54 55 56 57 58
    equality_expression <exprss> (113)
        on left: 56 57 58
        on right: 57 58 59 60
    AND_expression <exprss> (114)
        on left: 59 60
        on right: 60 61 62
    exclusive_OR_expression <exprss> (115)
        on left: 61 62
        on right: 62 63 64
    inclusive_OR_expression <exprss> (116)
        on left: 63 64
        on right: 64 65 66
    logical_AND_expression <exprss> (117)
        on left: 65 66
        on right: 66 67 68
    logical_OR_expression <exprss> (118)
        on left: 67 68
        on right: 68 69 70
    conditional_expression <exprss> (119)
        on left: 69 70
        on right: 70 71 86
    assignment_expression <exprss> (120)
        on left: 71 72
        on right: 23 24 72 84 85 138 140 142 163
    assignment_operator (121)
        on left: 73 74 75 76 77 78 79 80 81 82 83
        on right: 72
    expression <exprss> (122)
        on left: 84 85
        on right: 13 15 70 85 196 198 199 200 201 202 203 204 205 206 207 208 212
    constant_expression (123)
        on left: 86
        on right: 129 173 187
    declaration (124)
        on left: 87
        on right: 194 205 207 217 221 222
    declaration_specifiers (125)
        on left: 88 89 90 91
        on right: 87 92 158 159 218
    declaration_specifiers_opt (126)
        on left: 92 93
        on right: 88 89 90 91
    init_declarator_list (127)
        on left: 94 95
        on right: 95 96
    init_declarator_list_opt (128)
        on left: 96 97
        on right: 87
    init_declarator <smb> (129)
        on left: 98 99
        on right: 94 95
    storage_class_specifier (130)
        on left: 100 101 102 103
        on right: 88
    type_specifier (131)
        on left: 104 105 106 107 108 109 110 111 112 113 114 115 116
        on right: 89 117
    specifier_qualifier_list (132)
        on left: 117 118
        on right: 119 162
    specifier_qualifier_list_opt (133)
        on left: 119 120
        on right: 117 118
    enum_specifier (134)
        on left: 121 122 123
        on right: 116
    identifier_opt (135)
        on left: 124 125
        on right: 121 122
    enumerator_list (136)
        on left: 126 127
        on right: 121 122 127
    enumerator (137)
        on left: 128 129
        on right: 126 127
    type_qualifier (138)
        on left: 130 131 132
        on right: 90 118 150 151
    function_specifier (139)
        on left: 133
        on right: 91
    declarator <smb> (140)
        on left: 134 135
        on right: 98 99 137 158 218
    direct_declarator <smb> (141)
        on left: 136 137 138 139 140 141 142 143 144 145 146 147
        on right: 134 135 138 139 140 141 142 143 144 145 146 147
    pointer <type_sym> (142)
        on left: 148 149
        on right: 134 149
    type_qualifier_list (143)
        on left: 150 151
        on right: 138 139 143 151 152
    type_qualifier_list_opt (144)
        on left: 152 153
        on right: 142 148 149
    parameter_type_list (145)
        on left: 154 155
        on right: 145
    parameter_list (146)
        on left: 156 157
        on right: 154 155 157
    parameter_declaration (147)
        on left: 158 159
        on right: 156 157
    identifier_list (148)
        on left: 160 161
        on right: 146 161
    type_name (149)
        on left: 162
        on right: 21 22 32 40
    initializer <smb> (150)
        on left: 163 164 165
        on right: 99 166 167
    initializer_list (151)
        on left: 166 167
        on right: 21 22 164 165 167
    designation_opt (152)
        on left: 168 169
        on right: 166 167
    designation (153)
        on left: 170
        on right: 168
    designator_list (154)
        on left: 171 172
        on right: 170 172
    designator (155)
        on left: 173 174
        on right: 171 172
    statement <stmt> (156)
        on left: 175 176 177 178 179 180
        on right: 186 187 188 195 198 199 200
    loop_statement <stmt> (157)
        on left: 181 182 183 184 185
        on right: 201 203 205 206
    labeled_statement <stmt> (158)
        on left: 186 187 188
        on right: 175 181
    compound_statement <stmt> (159)
        on left: 189
        on right: 176
    block_item_list <stmt> (160)
        on left: 190 191
        on right: 191 192
    block_item_list_opt <stmt> (161)
        on left: 192 193
        on right: 189 202 204 207 208 218
    block_item <stmt> (162)
        on left: 194 195
        on right: 190 191
    expression_statement <exprss> (163)
        on left: 196 197
        on right: 177 182 205 206 207 208
    selection_statement <stmt> (164)
        on left: 198 199 200
        on right: 178 183
    iteration_statement <stmt> (165)
        on left: 201 202 203 204 205 206 207 208
        on right: 179 184
    jump_statement <stmt> (166)
        on left: 209 210 211 212 213
        on right: 180 185
    translation_unit (167)
        on left: 214 215
        on right: 0 215
    external_declaration (168)
        on left: 216 217
        on right: 214 215
    function_definition (169)
        on left: 218
        on right: 216
    declaration_list_opt (170)
        on left: 219 220
        on right: 218
    declaration_list (171)
        on left: 221 222
        on right: 219 222


State 0

    0 $accept: . translation_unit $end

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  102 storage_class_specifier: AUTO .

    $default  reduce using rule 102 (storage_class_specifier)


State 2

  105 type_specifier: CHAR .

    $default  reduce using rule 105 (type_specifier)


State 3

  130 type_qualifier: CONST .

    $default  reduce using rule 130 (type_qualifier)


State 4

  110 type_specifier: DOUBLE .

    $default  reduce using rule 110 (type_specifier)


State 5

  121 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  122               | ENUM . identifier_opt '{' enumerator_list COMMA '}'
  123               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 125 (identifier_opt)

    identifier_opt  go to state 33


State 6

  100 storage_class_specifier: EXTERN .

    $default  reduce using rule 100 (storage_class_specifier)


State 7

  109 type_specifier: FLOAT .

    $default  reduce using rule 109 (type_specifier)


State 8

  133 function_specifier: INLINE .

    $default  reduce using rule 133 (function_specifier)


State 9

  107 type_specifier: INT .

    $default  reduce using rule 107 (type_specifier)


State 10

  108 type_specifier: LONG .

    $default  reduce using rule 108 (type_specifier)


State 11

  103 storage_class_specifier: REGISTER .

    $default  reduce using rule 103 (storage_class_specifier)


State 12

  131 type_qualifier: RESTRICT .

    $default  reduce using rule 131 (type_qualifier)


State 13

  106 type_specifier: SHORT .

    $default  reduce using rule 106 (type_specifier)


State 14

  111 type_specifier: SIGNED .

    $default  reduce using rule 111 (type_specifier)


State 15

  101 storage_class_specifier: STATIC .

    $default  reduce using rule 101 (storage_class_specifier)


State 16

  112 type_specifier: UNSIGNED .

    $default  reduce using rule 112 (type_specifier)


State 17

  104 type_specifier: VOID .

    $default  reduce using rule 104 (type_specifier)


State 18

  132 type_qualifier: VOLATILE .

    $default  reduce using rule 132 (type_qualifier)


State 19

  113 type_specifier: _BOOL .

    $default  reduce using rule 113 (type_specifier)


State 20

  114 type_specifier: _COMPLEX .

    $default  reduce using rule 114 (type_specifier)


State 21

  115 type_specifier: _IMAGINARY .

    $default  reduce using rule 115 (type_specifier)


State 22

  217 external_declaration: declaration .

    $default  reduce using rule 217 (external_declaration)


State 23

   87 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON
  218 function_definition: declaration_specifiers . declarator declaration_list_opt changetable '{' block_item_list_opt '}'

    IDENTIFIER  shift, and go to state 34
    MUL         shift, and go to state 35
    '('         shift, and go to state 36

    $default  reduce using rule 97 (init_declarator_list_opt)

    init_declarator_list      go to state 37
    init_declarator_list_opt  go to state 38
    init_declarator           go to state 39
    declarator                go to state 40
    direct_declarator         go to state 41
    pointer                   go to state 42


State 24

   88 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 93 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   89 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 93 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  116 type_specifier: enum_specifier .

    $default  reduce using rule 116 (type_specifier)


State 27

   90 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 93 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 46
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   91 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 93 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 47
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  215 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 48
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 49
    function_definition      go to state 31


State 30

  214 translation_unit: external_declaration .

    $default  reduce using rule 214 (translation_unit)


State 31

  216 external_declaration: function_definition .

    $default  reduce using rule 216 (external_declaration)


State 32

  123 enum_specifier: ENUM IDENTIFIER .
  124 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 124 (identifier_opt)
    $default  reduce using rule 123 (enum_specifier)


State 33

  121 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  122               | ENUM identifier_opt . '{' enumerator_list COMMA '}'

    '{'  shift, and go to state 50


State 34

  136 direct_declarator: IDENTIFIER .

    $default  reduce using rule 136 (direct_declarator)


State 35

  148 pointer: MUL . type_qualifier_list_opt
  149        | MUL . type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 153 (type_qualifier_list_opt)

    type_qualifier           go to state 51
    type_qualifier_list      go to state 52
    type_qualifier_list_opt  go to state 53


State 36

  137 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 34
    MUL         shift, and go to state 35
    '('         shift, and go to state 36

    declarator         go to state 54
    direct_declarator  go to state 41
    pointer            go to state 42


State 37

   95 init_declarator_list: init_declarator_list . COMMA init_declarator
   96 init_declarator_list_opt: init_declarator_list .

    COMMA  shift, and go to state 55

    $default  reduce using rule 96 (init_declarator_list_opt)


State 38

   87 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 39

   94 init_declarator_list: init_declarator .

    $default  reduce using rule 94 (init_declarator_list)


State 40

   98 init_declarator: declarator .
   99                | declarator . ASSIGN initializer
  218 function_definition: declaration_specifiers declarator . declaration_list_opt changetable '{' block_item_list_opt '}'

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ASSIGN      shift, and go to state 57

    '{'       reduce using rule 220 (declaration_list_opt)
    $default  reduce using rule 98 (init_declarator)

    declaration              go to state 58
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 60
    declaration_list         go to state 61


State 41

  135 declarator: direct_declarator .
  138 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  139                  | direct_declarator . '[' type_qualifier_list ']'
  140                  | direct_declarator . '[' assignment_expression ']'
  141                  | direct_declarator . '[' ']'
  142                  | direct_declarator . '[' STATIC type_qualifier_list_opt assignment_expression ']'
  143                  | direct_declarator . '[' type_qualifier_list MUL ']'
  144                  | direct_declarator . '[' MUL ']'
  145                  | direct_declarator . '(' changetable parameter_type_list ')'
  146                  | direct_declarator . '(' identifier_list ')'
  147                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 135 (declarator)


State 42

  134 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 36

    direct_declarator  go to state 64


State 43

   92 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 92 (declaration_specifiers_opt)


State 44

   88 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 88 (declaration_specifiers)


State 45

   89 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 89 (declaration_specifiers)


State 46

   90 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 90 (declaration_specifiers)


State 47

   91 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 91 (declaration_specifiers)


State 48

    0 $accept: translation_unit $end .

    $default  accept


State 49

  215 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 215 (translation_unit)


State 50

  121 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  122               | ENUM identifier_opt '{' . enumerator_list COMMA '}'

    ENUMERATION_CONSTANT  shift, and go to state 65

    enumerator_list  go to state 66
    enumerator       go to state 67


State 51

  150 type_qualifier_list: type_qualifier .

    $default  reduce using rule 150 (type_qualifier_list)


State 52

  151 type_qualifier_list: type_qualifier_list . type_qualifier
  152 type_qualifier_list_opt: type_qualifier_list .

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 152 (type_qualifier_list_opt)

    type_qualifier  go to state 68


State 53

  148 pointer: MUL type_qualifier_list_opt .
  149        | MUL type_qualifier_list_opt . pointer

    MUL  shift, and go to state 35

    $default  reduce using rule 148 (pointer)

    pointer  go to state 69


State 54

  137 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 70


State 55

   95 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 34
    MUL         shift, and go to state 35
    '('         shift, and go to state 36

    init_declarator    go to state 71
    declarator         go to state 72
    direct_declarator  go to state 41
    pointer            go to state 42


State 56

   87 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON .

    $default  reduce using rule 87 (declaration)


State 57

   99 init_declarator: declarator ASSIGN . initializer

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 87
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 106


State 58

  221 declaration_list: declaration .

    $default  reduce using rule 221 (declaration_list)


State 59

   87 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON

    IDENTIFIER  shift, and go to state 34
    MUL         shift, and go to state 35
    '('         shift, and go to state 36

    $default  reduce using rule 97 (init_declarator_list_opt)

    init_declarator_list      go to state 37
    init_declarator_list_opt  go to state 38
    init_declarator           go to state 39
    declarator                go to state 72
    direct_declarator         go to state 41
    pointer                   go to state 42


State 60

  218 function_definition: declaration_specifiers declarator declaration_list_opt . changetable '{' block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 107


State 61

  219 declaration_list_opt: declaration_list .
  222 declaration_list: declaration_list . declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 219 (declaration_list_opt)

    declaration              go to state 108
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 62

  145 direct_declarator: direct_declarator '(' . changetable parameter_type_list ')'
  146                  | direct_declarator '(' . identifier_list ')'
  147                  | direct_declarator '(' . changetable ')'

    IDENTIFIER  shift, and go to state 109

    $default  reduce using rule 7 (changetable)

    changetable      go to state 110
    identifier_list  go to state 111


State 63

  138 direct_declarator: direct_declarator '[' . type_qualifier_list assignment_expression ']'
  139                  | direct_declarator '[' . type_qualifier_list ']'
  140                  | direct_declarator '[' . assignment_expression ']'
  141                  | direct_declarator '[' . ']'
  142                  | direct_declarator '[' . STATIC type_qualifier_list_opt assignment_expression ']'
  143                  | direct_declarator '[' . type_qualifier_list MUL ']'
  144                  | direct_declarator '[' . MUL ']'

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 12
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 112
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 113
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    ']'                 shift, and go to state 114
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 115
    type_qualifier             go to state 51
    type_qualifier_list        go to state 116


State 64

  134 declarator: pointer direct_declarator .
  138 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  139                  | direct_declarator . '[' type_qualifier_list ']'
  140                  | direct_declarator . '[' assignment_expression ']'
  141                  | direct_declarator . '[' ']'
  142                  | direct_declarator . '[' STATIC type_qualifier_list_opt assignment_expression ']'
  143                  | direct_declarator . '[' type_qualifier_list MUL ']'
  144                  | direct_declarator . '[' MUL ']'
  145                  | direct_declarator . '(' changetable parameter_type_list ')'
  146                  | direct_declarator . '(' identifier_list ')'
  147                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 134 (declarator)


State 65

  128 enumerator: ENUMERATION_CONSTANT .
  129           | ENUMERATION_CONSTANT . ASSIGN constant_expression

    ASSIGN  shift, and go to state 117

    $default  reduce using rule 128 (enumerator)


State 66

  121 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  122               | ENUM identifier_opt '{' enumerator_list . COMMA '}'
  127 enumerator_list: enumerator_list . COMMA enumerator

    COMMA  shift, and go to state 118
    '}'    shift, and go to state 119


State 67

  126 enumerator_list: enumerator .

    $default  reduce using rule 126 (enumerator_list)


State 68

  151 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 151 (type_qualifier_list)


State 69

  149 pointer: MUL type_qualifier_list_opt pointer .

    $default  reduce using rule 149 (pointer)


State 70

  137 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 137 (direct_declarator)


State 71

   95 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 95 (init_declarator_list)


State 72

   98 init_declarator: declarator .
   99                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 57

    $default  reduce using rule 98 (init_declarator)


State 73

   31 unary_expression: SIZEOF . unary_expression
   32                 | SIZEOF . '(' type_name ')'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 120
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 121
    unary_operator      go to state 92


State 74

    8 primary_expression: IDENTIFIER .

    $default  reduce using rule 8 (primary_expression)


State 75

    9 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 9 (primary_expression)


State 76

   10 primary_expression: FLOATING_CONSTANT .

    $default  reduce using rule 10 (primary_expression)


State 77

   11 primary_expression: CHARACTER_CONSTANT .

    $default  reduce using rule 11 (primary_expression)


State 78

   12 primary_expression: STRING_LITERAL .

    $default  reduce using rule 12 (primary_expression)


State 79

   28 unary_expression: INC . unary_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 122
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 123
    unary_operator      go to state 92


State 80

   29 unary_expression: DEC . unary_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 122
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 124
    unary_operator      go to state 92


State 81

   34 unary_operator: MUL .

    $default  reduce using rule 34 (unary_operator)


State 82

   35 unary_operator: ADD .

    $default  reduce using rule 35 (unary_operator)


State 83

   36 unary_operator: SUB .

    $default  reduce using rule 36 (unary_operator)


State 84

   37 unary_operator: BITWISE_NOT .

    $default  reduce using rule 37 (unary_operator)


State 85

   33 unary_operator: BITWISE_AND .

    $default  reduce using rule 33 (unary_operator)


State 86

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list COMMA '}'
   40 cast_expression: '(' . type_name ')' cast_expression

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 126
    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 26
    type_qualifier             go to state 129
    type_name                  go to state 130


State 87

  164 initializer: '{' . initializer_list '}'
  165            | '{' . initializer_list COMMA '}'

    '['  shift, and go to state 131
    '.'  shift, and go to state 132

    $default  reduce using rule 169 (designation_opt)

    initializer_list  go to state 133
    designation_opt   go to state 134
    designation       go to state 135
    designator_list   go to state 136
    designator        go to state 137


State 88

   38 unary_operator: '!' .

    $default  reduce using rule 38 (unary_operator)


State 89

   14 postfix_expression: primary_expression .

    $default  reduce using rule 14 (postfix_expression)


State 90

   15 postfix_expression: postfix_expression . '[' expression ']'
   16                   | postfix_expression . '(' argument_expression_list_opt ')'
   17                   | postfix_expression . '.' IDENTIFIER
   18                   | postfix_expression . ARROW IDENTIFIER
   19                   | postfix_expression . INC
   20                   | postfix_expression . DEC
   27 unary_expression: postfix_expression .

    ARROW  shift, and go to state 138
    INC    shift, and go to state 139
    DEC    shift, and go to state 140
    '('    shift, and go to state 141
    '['    shift, and go to state 142
    '.'    shift, and go to state 143

    $default  reduce using rule 27 (unary_expression)


State 91

   39 cast_expression: unary_expression .
   72 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN          shift, and go to state 144
    MUL_EQ          shift, and go to state 145
    DIV_EQ          shift, and go to state 146
    MOD_EQ          shift, and go to state 147
    ADD_EQ          shift, and go to state 148
    SUB_EQ          shift, and go to state 149
    SHIFT_LEFT_EQ   shift, and go to state 150
    SHIFT_RIGHT_EQ  shift, and go to state 151
    BITWISE_AND_EQ  shift, and go to state 152
    BITWISE_XOR_EQ  shift, and go to state 153
    BITWISE_OR_EQ   shift, and go to state 154

    $default  reduce using rule 39 (cast_expression)

    assignment_operator  go to state 155


State 92

   30 unary_expression: unary_operator . cast_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 157


State 93

   41 multiplicative_expression: cast_expression .

    $default  reduce using rule 41 (multiplicative_expression)


State 94

   42 multiplicative_expression: multiplicative_expression . MUL cast_expression
   43                          | multiplicative_expression . DIV cast_expression
   44                          | multiplicative_expression . MOD cast_expression
   45 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 158
    DIV  shift, and go to state 159
    MOD  shift, and go to state 160

    $default  reduce using rule 45 (additive_expression)


State 95

   46 additive_expression: additive_expression . ADD multiplicative_expression
   47                    | additive_expression . SUB multiplicative_expression
   48 shift_expression: additive_expression .

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 48 (shift_expression)


State 96

   49 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   50                 | shift_expression . SHIFT_RIGHT additive_expression
   51 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 163
    SHIFT_RIGHT  shift, and go to state 164

    $default  reduce using rule 51 (relational_expression)


State 97

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LTE shift_expression
   55                      | relational_expression . GTE shift_expression
   56 equality_expression: relational_expression .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 56 (equality_expression)


State 98

   57 equality_expression: equality_expression . EQ relational_expression
   58                    | equality_expression . NEQ relational_expression
   59 AND_expression: equality_expression .

    EQ   shift, and go to state 169
    NEQ  shift, and go to state 170

    $default  reduce using rule 59 (AND_expression)


State 99

   60 AND_expression: AND_expression . BITWISE_AND equality_expression
   61 exclusive_OR_expression: AND_expression .

    BITWISE_AND  shift, and go to state 171

    $default  reduce using rule 61 (exclusive_OR_expression)


State 100

   62 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   63 inclusive_OR_expression: exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 172

    $default  reduce using rule 63 (inclusive_OR_expression)


State 101

   64 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   65 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 173

    $default  reduce using rule 65 (logical_AND_expression)


State 102

   66 logical_AND_expression: logical_AND_expression . AND M inclusive_OR_expression
   67 logical_OR_expression: logical_AND_expression .

    AND  shift, and go to state 174

    $default  reduce using rule 67 (logical_OR_expression)


State 103

   68 logical_OR_expression: logical_OR_expression . OR M logical_AND_expression
   69 conditional_expression: logical_OR_expression .
   70                       | logical_OR_expression . N '?' M expression N COLON M conditional_expression

    OR  shift, and go to state 175

    '?'       reduce using rule 6 (N)
    $default  reduce using rule 69 (conditional_expression)

    N  go to state 176


State 104

   71 assignment_expression: conditional_expression .

    $default  reduce using rule 71 (assignment_expression)


State 105

  163 initializer: assignment_expression .

    $default  reduce using rule 163 (initializer)


State 106

   99 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 99 (init_declarator)


State 107

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable . '{' block_item_list_opt '}'

    '{'  shift, and go to state 177


State 108

  222 declaration_list: declaration_list declaration .

    $default  reduce using rule 222 (declaration_list)


State 109

  160 identifier_list: IDENTIFIER .

    $default  reduce using rule 160 (identifier_list)


State 110

  145 direct_declarator: direct_declarator '(' changetable . parameter_type_list ')'
  147                  | direct_declarator '(' changetable . ')'

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ')'         shift, and go to state 178

    declaration_specifiers   go to state 179
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 180
    parameter_list           go to state 181
    parameter_declaration    go to state 182


State 111

  146 direct_declarator: direct_declarator '(' identifier_list . ')'
  161 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 183
    ')'    shift, and go to state 184


State 112

  142 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list_opt assignment_expression ']'

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 153 (type_qualifier_list_opt)

    type_qualifier           go to state 51
    type_qualifier_list      go to state 52
    type_qualifier_list_opt  go to state 185


State 113

   34 unary_operator: MUL .
  144 direct_declarator: direct_declarator '[' MUL . ']'

    ']'  shift, and go to state 186

    $default  reduce using rule 34 (unary_operator)


State 114

  141 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 141 (direct_declarator)


State 115

  140 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 187


State 116

  138 direct_declarator: direct_declarator '[' type_qualifier_list . assignment_expression ']'
  139                  | direct_declarator '[' type_qualifier_list . ']'
  143                  | direct_declarator '[' type_qualifier_list . MUL ']'
  151 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 12
    SIZEOF              shift, and go to state 73
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 188
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    ']'                 shift, and go to state 189
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 190
    type_qualifier             go to state 68


State 117

  129 enumerator: ENUMERATION_CONSTANT ASSIGN . constant_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 191
    constant_expression        go to state 192


State 118

  122 enum_specifier: ENUM identifier_opt '{' enumerator_list COMMA . '}'
  127 enumerator_list: enumerator_list COMMA . enumerator

    ENUMERATION_CONSTANT  shift, and go to state 65
    '}'                   shift, and go to state 193

    enumerator  go to state 194


State 119

  121 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 121 (enum_specifier)


State 120

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list COMMA '}'
   32 unary_expression: SIZEOF '(' . type_name ')'

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 126
    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 26
    type_qualifier             go to state 129
    type_name                  go to state 195


State 121

   31 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 31 (unary_expression)


State 122

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list COMMA '}'

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 126
    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 26
    type_qualifier             go to state 129
    type_name                  go to state 196


State 123

   28 unary_expression: INC unary_expression .

    $default  reduce using rule 28 (unary_expression)


State 124

   29 unary_expression: DEC unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 125

   84 expression: assignment_expression .

    $default  reduce using rule 84 (expression)


State 126

   13 primary_expression: '(' expression . ')'
   85 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 197
    ')'    shift, and go to state 198


State 127

  117 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 120 (specifier_qualifier_list_opt)

    type_specifier                go to state 127
    specifier_qualifier_list      go to state 199
    specifier_qualifier_list_opt  go to state 200
    enum_specifier                go to state 26
    type_qualifier                go to state 129


State 128

  162 type_name: specifier_qualifier_list .

    $default  reduce using rule 162 (type_name)


State 129

  118 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 120 (specifier_qualifier_list_opt)

    type_specifier                go to state 127
    specifier_qualifier_list      go to state 199
    specifier_qualifier_list_opt  go to state 201
    enum_specifier                go to state 26
    type_qualifier                go to state 129


State 130

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list COMMA '}'
   40 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 202


State 131

  173 designator: '[' . constant_expression ']'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 191
    constant_expression        go to state 203


State 132

  174 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 204


State 133

  164 initializer: '{' initializer_list . '}'
  165            | '{' initializer_list . COMMA '}'
  167 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA  shift, and go to state 205
    '}'    shift, and go to state 206


State 134

  166 initializer_list: designation_opt . initializer

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 87
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 207


State 135

  168 designation_opt: designation .

    $default  reduce using rule 168 (designation_opt)


State 136

  170 designation: designator_list . ASSIGN
  172 designator_list: designator_list . designator

    ASSIGN  shift, and go to state 208
    '['     shift, and go to state 131
    '.'     shift, and go to state 132

    designator  go to state 209


State 137

  171 designator_list: designator .

    $default  reduce using rule 171 (designator_list)


State 138

   18 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 210


State 139

   19 postfix_expression: postfix_expression INC .

    $default  reduce using rule 19 (postfix_expression)


State 140

   20 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 20 (postfix_expression)


State 141

   16 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    $default  reduce using rule 26 (argument_expression_list_opt)

    primary_expression            go to state 89
    postfix_expression            go to state 90
    argument_expression_list      go to state 211
    argument_expression_list_opt  go to state 212
    unary_expression              go to state 91
    unary_operator                go to state 92
    cast_expression               go to state 93
    multiplicative_expression     go to state 94
    additive_expression           go to state 95
    shift_expression              go to state 96
    relational_expression         go to state 97
    equality_expression           go to state 98
    AND_expression                go to state 99
    exclusive_OR_expression       go to state 100
    inclusive_OR_expression       go to state 101
    logical_AND_expression        go to state 102
    logical_OR_expression         go to state 103
    conditional_expression        go to state 104
    assignment_expression         go to state 213


State 142

   15 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 214


State 143

   17 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 144

   73 assignment_operator: ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 145

   74 assignment_operator: MUL_EQ .

    $default  reduce using rule 74 (assignment_operator)


State 146

   75 assignment_operator: DIV_EQ .

    $default  reduce using rule 75 (assignment_operator)


State 147

   76 assignment_operator: MOD_EQ .

    $default  reduce using rule 76 (assignment_operator)


State 148

   77 assignment_operator: ADD_EQ .

    $default  reduce using rule 77 (assignment_operator)


State 149

   78 assignment_operator: SUB_EQ .

    $default  reduce using rule 78 (assignment_operator)


State 150

   79 assignment_operator: SHIFT_LEFT_EQ .

    $default  reduce using rule 79 (assignment_operator)


State 151

   80 assignment_operator: SHIFT_RIGHT_EQ .

    $default  reduce using rule 80 (assignment_operator)


State 152

   81 assignment_operator: BITWISE_AND_EQ .

    $default  reduce using rule 81 (assignment_operator)


State 153

   82 assignment_operator: BITWISE_XOR_EQ .

    $default  reduce using rule 82 (assignment_operator)


State 154

   83 assignment_operator: BITWISE_OR_EQ .

    $default  reduce using rule 83 (assignment_operator)


State 155

   72 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 216


State 156

   39 cast_expression: unary_expression .

    $default  reduce using rule 39 (cast_expression)


State 157

   30 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 30 (unary_expression)


State 158

   42 multiplicative_expression: multiplicative_expression MUL . cast_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 217


State 159

   43 multiplicative_expression: multiplicative_expression DIV . cast_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 218


State 160

   44 multiplicative_expression: multiplicative_expression MOD . cast_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 219


State 161

   46 additive_expression: additive_expression ADD . multiplicative_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 220


State 162

   47 additive_expression: additive_expression SUB . multiplicative_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 221


State 163

   49 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 222


State 164

   50 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 223


State 165

   52 relational_expression: relational_expression LT . shift_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 224


State 166

   53 relational_expression: relational_expression GT . shift_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 225


State 167

   54 relational_expression: relational_expression LTE . shift_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 226


State 168

   55 relational_expression: relational_expression GTE . shift_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 227


State 169

   57 equality_expression: equality_expression EQ . relational_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 228


State 170

   58 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 229


State 171

   60 AND_expression: AND_expression BITWISE_AND . equality_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 230


State 172

   62 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR . AND_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 231


State 173

   64 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 232


State 174

   66 logical_AND_expression: logical_AND_expression AND . M inclusive_OR_expression

    $default  reduce using rule 1 (M)

    M  go to state 233


State 175

   68 logical_OR_expression: logical_OR_expression OR . M logical_AND_expression

    $default  reduce using rule 1 (M)

    M  go to state 234


State 176

   70 conditional_expression: logical_OR_expression N . '?' M expression N COLON M conditional_expression

    '?'  shift, and go to state 235


State 177

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' . block_item_list_opt '}'

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    $default  reduce using rule 193 (block_item_list_opt)

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list            go to state 255
    block_item_list_opt        go to state 256
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 178

  147 direct_declarator: direct_declarator '(' changetable ')' .

    $default  reduce using rule 147 (direct_declarator)


State 179

  158 parameter_declaration: declaration_specifiers . declarator
  159                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 34
    MUL         shift, and go to state 35
    '('         shift, and go to state 36

    $default  reduce using rule 159 (parameter_declaration)

    declarator         go to state 262
    direct_declarator  go to state 41
    pointer            go to state 42


State 180

  145 direct_declarator: direct_declarator '(' changetable parameter_type_list . ')'

    ')'  shift, and go to state 263


State 181

  154 parameter_type_list: parameter_list .
  155                    | parameter_list . COMMA ELLIPSIS
  157 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 264

    $default  reduce using rule 154 (parameter_type_list)


State 182

  156 parameter_list: parameter_declaration .

    $default  reduce using rule 156 (parameter_list)


State 183

  161 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 265


State 184

  146 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 146 (direct_declarator)


State 185

  142 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt . assignment_expression ']'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 266


State 186

  144 direct_declarator: direct_declarator '[' MUL ']' .

    $default  reduce using rule 144 (direct_declarator)


State 187

  140 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 140 (direct_declarator)


State 188

   34 unary_operator: MUL .
  143 direct_declarator: direct_declarator '[' type_qualifier_list MUL . ']'

    ']'  shift, and go to state 267

    $default  reduce using rule 34 (unary_operator)


State 189

  139 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 139 (direct_declarator)


State 190

  138 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 268


State 191

   86 constant_expression: conditional_expression .

    $default  reduce using rule 86 (constant_expression)


State 192

  129 enumerator: ENUMERATION_CONSTANT ASSIGN constant_expression .

    $default  reduce using rule 129 (enumerator)


State 193

  122 enum_specifier: ENUM identifier_opt '{' enumerator_list COMMA '}' .

    $default  reduce using rule 122 (enum_specifier)


State 194

  127 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 127 (enumerator_list)


State 195

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list COMMA '}'
   32 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 269


State 196

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list COMMA '}'

    ')'  shift, and go to state 270


State 197

   85 expression: expression COMMA . assignment_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 271


State 198

   13 primary_expression: '(' expression ')' .

    $default  reduce using rule 13 (primary_expression)


State 199

  119 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 119 (specifier_qualifier_list_opt)


State 200

  117 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 117 (specifier_qualifier_list)


State 201

  118 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 118 (specifier_qualifier_list)


State 202

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list COMMA '}'
   40 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 272
    '!'                 shift, and go to state 88

    primary_expression  go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 273


State 203

  173 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 274


State 204

  174 designator: '.' IDENTIFIER .

    $default  reduce using rule 174 (designator)


State 205

  165 initializer: '{' initializer_list COMMA . '}'
  167 initializer_list: initializer_list COMMA . designation_opt initializer

    '['  shift, and go to state 131
    '.'  shift, and go to state 132
    '}'  shift, and go to state 275

    $default  reduce using rule 169 (designation_opt)

    designation_opt  go to state 276
    designation      go to state 135
    designator_list  go to state 136
    designator       go to state 137


State 206

  164 initializer: '{' initializer_list '}' .

    $default  reduce using rule 164 (initializer)


State 207

  166 initializer_list: designation_opt initializer .

    $default  reduce using rule 166 (initializer_list)


State 208

  170 designation: designator_list ASSIGN .

    $default  reduce using rule 170 (designation)


State 209

  172 designator_list: designator_list designator .

    $default  reduce using rule 172 (designator_list)


State 210

   18 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 18 (postfix_expression)


State 211

   24 argument_expression_list: argument_expression_list . COMMA assignment_expression
   25 argument_expression_list_opt: argument_expression_list .

    COMMA  shift, and go to state 277

    $default  reduce using rule 25 (argument_expression_list_opt)


State 212

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 278


State 213

   23 argument_expression_list: assignment_expression .

    $default  reduce using rule 23 (argument_expression_list)


State 214

   15 postfix_expression: postfix_expression '[' expression . ']'
   85 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 197
    ']'    shift, and go to state 279


State 215

   17 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 17 (postfix_expression)


State 216

   72 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 72 (assignment_expression)


State 217

   42 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 218

   43 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 43 (multiplicative_expression)


State 219

   44 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 44 (multiplicative_expression)


State 220

   42 multiplicative_expression: multiplicative_expression . MUL cast_expression
   43                          | multiplicative_expression . DIV cast_expression
   44                          | multiplicative_expression . MOD cast_expression
   46 additive_expression: additive_expression ADD multiplicative_expression .

    MUL  shift, and go to state 158
    DIV  shift, and go to state 159
    MOD  shift, and go to state 160

    $default  reduce using rule 46 (additive_expression)


State 221

   42 multiplicative_expression: multiplicative_expression . MUL cast_expression
   43                          | multiplicative_expression . DIV cast_expression
   44                          | multiplicative_expression . MOD cast_expression
   47 additive_expression: additive_expression SUB multiplicative_expression .

    MUL  shift, and go to state 158
    DIV  shift, and go to state 159
    MOD  shift, and go to state 160

    $default  reduce using rule 47 (additive_expression)


State 222

   46 additive_expression: additive_expression . ADD multiplicative_expression
   47                    | additive_expression . SUB multiplicative_expression
   49 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 49 (shift_expression)


State 223

   46 additive_expression: additive_expression . ADD multiplicative_expression
   47                    | additive_expression . SUB multiplicative_expression
   50 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 50 (shift_expression)


State 224

   49 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   50                 | shift_expression . SHIFT_RIGHT additive_expression
   52 relational_expression: relational_expression LT shift_expression .

    SHIFT_LEFT   shift, and go to state 163
    SHIFT_RIGHT  shift, and go to state 164

    $default  reduce using rule 52 (relational_expression)


State 225

   49 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   50                 | shift_expression . SHIFT_RIGHT additive_expression
   53 relational_expression: relational_expression GT shift_expression .

    SHIFT_LEFT   shift, and go to state 163
    SHIFT_RIGHT  shift, and go to state 164

    $default  reduce using rule 53 (relational_expression)


State 226

   49 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   50                 | shift_expression . SHIFT_RIGHT additive_expression
   54 relational_expression: relational_expression LTE shift_expression .

    SHIFT_LEFT   shift, and go to state 163
    SHIFT_RIGHT  shift, and go to state 164

    $default  reduce using rule 54 (relational_expression)


State 227

   49 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   50                 | shift_expression . SHIFT_RIGHT additive_expression
   55 relational_expression: relational_expression GTE shift_expression .

    SHIFT_LEFT   shift, and go to state 163
    SHIFT_RIGHT  shift, and go to state 164

    $default  reduce using rule 55 (relational_expression)


State 228

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LTE shift_expression
   55                      | relational_expression . GTE shift_expression
   57 equality_expression: equality_expression EQ relational_expression .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 57 (equality_expression)


State 229

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LTE shift_expression
   55                      | relational_expression . GTE shift_expression
   58 equality_expression: equality_expression NEQ relational_expression .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 58 (equality_expression)


State 230

   57 equality_expression: equality_expression . EQ relational_expression
   58                    | equality_expression . NEQ relational_expression
   60 AND_expression: AND_expression BITWISE_AND equality_expression .

    EQ   shift, and go to state 169
    NEQ  shift, and go to state 170

    $default  reduce using rule 60 (AND_expression)


State 231

   60 AND_expression: AND_expression . BITWISE_AND equality_expression
   62 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR AND_expression .

    BITWISE_AND  shift, and go to state 171

    $default  reduce using rule 62 (exclusive_OR_expression)


State 232

   62 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   64 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 172

    $default  reduce using rule 64 (inclusive_OR_expression)


State 233

   66 logical_AND_expression: logical_AND_expression AND M . inclusive_OR_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 280


State 234

   68 logical_OR_expression: logical_OR_expression OR M . logical_AND_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 281


State 235

   70 conditional_expression: logical_OR_expression N '?' . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 282


State 236

  211 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 283


State 237

  187 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 191
    constant_expression        go to state 284


State 238

  210 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 285


State 239

  188 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 286


State 240

  203 iteration_statement: DO . D M loop_statement M WHILE '(' expression ')' SEMICOLON
  204                    | DO . D '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 4 (D)

    D  go to state 287


State 241

  205 iteration_statement: FOR . F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR . F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 2 (F)

    F  go to state 288


State 242

  209 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 289


State 243

  198 selection_statement: IF . '(' expression N ')' M statement N
  199                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 290


State 244

  212 jump_statement: RETURN . expression SEMICOLON
  213               | RETURN . SEMICOLON

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 291
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 292


State 245

  200 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 293


State 246

  201 iteration_statement: WHILE . W '(' X changetable M expression ')' M loop_statement
  202                    | WHILE . W '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 3 (W)

    W  go to state 294


State 247

    8 primary_expression: IDENTIFIER .
  186 labeled_statement: IDENTIFIER . COLON M statement

    COLON  shift, and go to state 295

    $default  reduce using rule 8 (primary_expression)


State 248

  197 expression_statement: SEMICOLON .

    $default  reduce using rule 197 (expression_statement)


State 249

  189 compound_statement: '{' . X changetable block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 296


State 250

   85 expression: expression . COMMA assignment_expression
  196 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 297
    COMMA      shift, and go to state 197


State 251

  194 block_item: declaration .

    $default  reduce using rule 194 (block_item)


State 252

  195 block_item: statement .

    $default  reduce using rule 195 (block_item)


State 253

  175 statement: labeled_statement .

    $default  reduce using rule 175 (statement)


State 254

  176 statement: compound_statement .

    $default  reduce using rule 176 (statement)


State 255

  191 block_item_list: block_item_list . M block_item
  192 block_item_list_opt: block_item_list .

    '}'       reduce using rule 192 (block_item_list_opt)
    $default  reduce using rule 1 (M)

    M  go to state 298


State 256

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt . '}'

    '}'  shift, and go to state 299


State 257

  190 block_item_list: block_item .

    $default  reduce using rule 190 (block_item_list)


State 258

  177 statement: expression_statement .

    $default  reduce using rule 177 (statement)


State 259

  178 statement: selection_statement .

    $default  reduce using rule 178 (statement)


State 260

  179 statement: iteration_statement .

    $default  reduce using rule 179 (statement)


State 261

  180 statement: jump_statement .

    $default  reduce using rule 180 (statement)


State 262

  158 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 158 (parameter_declaration)


State 263

  145 direct_declarator: direct_declarator '(' changetable parameter_type_list ')' .

    $default  reduce using rule 145 (direct_declarator)


State 264

  155 parameter_type_list: parameter_list COMMA . ELLIPSIS
  157 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ELLIPSIS    shift, and go to state 300

    declaration_specifiers   go to state 179
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 301


State 265

  161 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 161 (identifier_list)


State 266

  142 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression . ']'

    ']'  shift, and go to state 302


State 267

  143 direct_declarator: direct_declarator '[' type_qualifier_list MUL ']' .

    $default  reduce using rule 143 (direct_declarator)


State 268

  138 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 138 (direct_declarator)


State 269

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list COMMA '}'
   32 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 272

    $default  reduce using rule 32 (unary_expression)


State 270

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list COMMA '}'

    '{'  shift, and go to state 272


State 271

   85 expression: expression COMMA assignment_expression .

    $default  reduce using rule 85 (expression)


State 272

   21 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   22                   | '(' type_name ')' '{' . initializer_list COMMA '}'

    '['  shift, and go to state 131
    '.'  shift, and go to state 132

    $default  reduce using rule 169 (designation_opt)

    initializer_list  go to state 303
    designation_opt   go to state 134
    designation       go to state 135
    designator_list   go to state 136
    designator        go to state 137


State 273

   40 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 40 (cast_expression)


State 274

  173 designator: '[' constant_expression ']' .

    $default  reduce using rule 173 (designator)


State 275

  165 initializer: '{' initializer_list COMMA '}' .

    $default  reduce using rule 165 (initializer)


State 276

  167 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 87
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 304


State 277

   24 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 305


State 278

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 16 (postfix_expression)


State 279

   15 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 15 (postfix_expression)


State 280

   64 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   66 logical_AND_expression: logical_AND_expression AND M inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 173

    $default  reduce using rule 66 (logical_AND_expression)


State 281

   66 logical_AND_expression: logical_AND_expression . AND M inclusive_OR_expression
   68 logical_OR_expression: logical_OR_expression OR M logical_AND_expression .

    AND  shift, and go to state 174

    $default  reduce using rule 68 (logical_OR_expression)


State 282

   70 conditional_expression: logical_OR_expression N '?' M . expression N COLON M conditional_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 306


State 283

  211 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 211 (jump_statement)


State 284

  187 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 307


State 285

  210 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 210 (jump_statement)


State 286

  188 labeled_statement: DEFAULT COLON . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    statement                  go to state 308
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 287

  203 iteration_statement: DO D . M loop_statement M WHILE '(' expression ')' SEMICOLON
  204                    | DO D . '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    '{'  shift, and go to state 309

    $default  reduce using rule 1 (M)

    M  go to state 310


State 288

  205 iteration_statement: FOR F . '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F . '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    '('  shift, and go to state 311


State 289

  209 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 312


State 290

  198 selection_statement: IF '(' . expression N ')' M statement N
  199                    | IF '(' . expression N ')' M statement N ELSE M statement

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 313


State 291

  213 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 213 (jump_statement)


State 292

   85 expression: expression . COMMA assignment_expression
  212 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 314
    COMMA      shift, and go to state 197


State 293

  200 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 315


State 294

  201 iteration_statement: WHILE W . '(' X changetable M expression ')' M loop_statement
  202                    | WHILE W . '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    '('  shift, and go to state 316


State 295

  186 labeled_statement: IDENTIFIER COLON . M statement

    $default  reduce using rule 1 (M)

    M  go to state 317


State 296

  189 compound_statement: '{' X . changetable block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 318


State 297

  196 expression_statement: expression SEMICOLON .

    $default  reduce using rule 196 (expression_statement)


State 298

  191 block_item_list: block_item_list M . block_item

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item                 go to state 319
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 299

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}' .

    $default  reduce using rule 218 (function_definition)


State 300

  155 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 155 (parameter_type_list)


State 301

  157 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 157 (parameter_list)


State 302

  142 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']' .

    $default  reduce using rule 142 (direct_declarator)


State 303

   21 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   22                   | '(' type_name ')' '{' initializer_list . COMMA '}'
  167 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA  shift, and go to state 320
    '}'    shift, and go to state 321


State 304

  167 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 167 (initializer_list)


State 305

   24 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 24 (argument_expression_list)


State 306

   70 conditional_expression: logical_OR_expression N '?' M expression . N COLON M conditional_expression
   85 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 322


State 307

  187 labeled_statement: CASE constant_expression COLON . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    statement                  go to state 323
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 308

  188 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 188 (labeled_statement)


State 309

  204 iteration_statement: DO D '{' . M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 324


State 310

  203 iteration_statement: DO D M . loop_statement M WHILE '(' expression ')' SEMICOLON

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    loop_statement             go to state 325
    labeled_statement          go to state 326
    expression_statement       go to state 327
    selection_statement        go to state 328
    iteration_statement        go to state 329
    jump_statement             go to state 330


State 311

  205 iteration_statement: FOR F '(' . X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' . X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 331


State 312

  209 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 209 (jump_statement)


State 313

   85 expression: expression . COMMA assignment_expression
  198 selection_statement: IF '(' expression . N ')' M statement N
  199                    | IF '(' expression . N ')' M statement N ELSE M statement

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 332


State 314

  212 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 212 (jump_statement)


State 315

   85 expression: expression . COMMA assignment_expression
  200 selection_statement: SWITCH '(' expression . ')' statement

    COMMA  shift, and go to state 197
    ')'    shift, and go to state 333


State 316

  201 iteration_statement: WHILE W '(' . X changetable M expression ')' M loop_statement
  202                    | WHILE W '(' . X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 334


State 317

  186 labeled_statement: IDENTIFIER COLON M . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    statement                  go to state 335
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 318

  189 compound_statement: '{' X changetable . block_item_list_opt '}'

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    $default  reduce using rule 193 (block_item_list_opt)

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list            go to state 255
    block_item_list_opt        go to state 336
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 319

  191 block_item_list: block_item_list M block_item .

    $default  reduce using rule 191 (block_item_list)


State 320

   22 postfix_expression: '(' type_name ')' '{' initializer_list COMMA . '}'
  167 initializer_list: initializer_list COMMA . designation_opt initializer

    '['  shift, and go to state 131
    '.'  shift, and go to state 132
    '}'  shift, and go to state 337

    $default  reduce using rule 169 (designation_opt)

    designation_opt  go to state 276
    designation      go to state 135
    designator_list  go to state 136
    designator       go to state 137


State 321

   21 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 21 (postfix_expression)


State 322

   70 conditional_expression: logical_OR_expression N '?' M expression N . COLON M conditional_expression

    COLON  shift, and go to state 338


State 323

  187 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 187 (labeled_statement)


State 324

  204 iteration_statement: DO D '{' M . block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    $default  reduce using rule 193 (block_item_list_opt)

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list            go to state 255
    block_item_list_opt        go to state 339
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 325

  203 iteration_statement: DO D M loop_statement . M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 340


State 326

  181 loop_statement: labeled_statement .

    $default  reduce using rule 181 (loop_statement)


State 327

  182 loop_statement: expression_statement .

    $default  reduce using rule 182 (loop_statement)


State 328

  183 loop_statement: selection_statement .

    $default  reduce using rule 183 (loop_statement)


State 329

  184 loop_statement: iteration_statement .

    $default  reduce using rule 184 (loop_statement)


State 330

  185 loop_statement: jump_statement .

    $default  reduce using rule 185 (loop_statement)


State 331

  205 iteration_statement: FOR F '(' X . changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X . changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 341


State 332

  198 selection_statement: IF '(' expression N . ')' M statement N
  199                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 342


State 333

  200 selection_statement: SWITCH '(' expression ')' . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    statement                  go to state 343
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 334

  201 iteration_statement: WHILE W '(' X . changetable M expression ')' M loop_statement
  202                    | WHILE W '(' X . changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 344


State 335

  186 labeled_statement: IDENTIFIER COLON M statement .

    $default  reduce using rule 186 (labeled_statement)


State 336

  189 compound_statement: '{' X changetable block_item_list_opt . '}'

    '}'  shift, and go to state 345


State 337

   22 postfix_expression: '(' type_name ')' '{' initializer_list COMMA '}' .

    $default  reduce using rule 22 (postfix_expression)


State 338

   70 conditional_expression: logical_OR_expression N '?' M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 346


State 339

  204 iteration_statement: DO D '{' M block_item_list_opt . '}' M WHILE '(' expression ')' SEMICOLON

    '}'  shift, and go to state 347


State 340

  203 iteration_statement: DO D M loop_statement M . WHILE '(' expression ')' SEMICOLON

    WHILE  shift, and go to state 348


State 341

  205 iteration_statement: FOR F '(' X changetable . declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable . declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    AUTO                shift, and go to state 1
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 349
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_statement       go to state 350


State 342

  198 selection_statement: IF '(' expression N ')' . M statement N
  199                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 351


State 343

  200 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 200 (selection_statement)


State 344

  201 iteration_statement: WHILE W '(' X changetable . M expression ')' M loop_statement
  202                    | WHILE W '(' X changetable . M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 352


State 345

  189 compound_statement: '{' X changetable block_item_list_opt '}' .

    $default  reduce using rule 189 (compound_statement)


State 346

   70 conditional_expression: logical_OR_expression N '?' M expression N COLON M . conditional_expression

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 353


State 347

  204 iteration_statement: DO D '{' M block_item_list_opt '}' . M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 354


State 348

  203 iteration_statement: DO D M loop_statement M WHILE . '(' expression ')' SEMICOLON

    '('  shift, and go to state 355


State 349

  205 iteration_statement: FOR F '(' X changetable declaration . M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 356


State 350

  206 iteration_statement: FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 357


State 351

  198 selection_statement: IF '(' expression N ')' M . statement N
  199                    | IF '(' expression N ')' M . statement N ELSE M statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    statement                  go to state 358
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 352

  201 iteration_statement: WHILE W '(' X changetable M . expression ')' M loop_statement
  202                    | WHILE W '(' X changetable M . expression ')' '{' M block_item_list_opt '}'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 359


State 353

   70 conditional_expression: logical_OR_expression N '?' M expression N COLON M conditional_expression .

    $default  reduce using rule 70 (conditional_expression)


State 354

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M . WHILE '(' expression ')' SEMICOLON

    WHILE  shift, and go to state 360


State 355

  203 iteration_statement: DO D M loop_statement M WHILE '(' . expression ')' SEMICOLON

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 361


State 356

  205 iteration_statement: FOR F '(' X changetable declaration M . expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    expression_statement       go to state 362


State 357

  206 iteration_statement: FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    expression_statement       go to state 363


State 358

  198 selection_statement: IF '(' expression N ')' M statement . N
  199                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 6 (N)

    N  go to state 364


State 359

   85 expression: expression . COMMA assignment_expression
  201 iteration_statement: WHILE W '(' X changetable M expression . ')' M loop_statement
  202                    | WHILE W '(' X changetable M expression . ')' '{' M block_item_list_opt '}'

    COMMA  shift, and go to state 197
    ')'    shift, and go to state 365


State 360

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE . '(' expression ')' SEMICOLON

    '('  shift, and go to state 366


State 361

   85 expression: expression . COMMA assignment_expression
  203 iteration_statement: DO D M loop_statement M WHILE '(' expression . ')' SEMICOLON

    COMMA  shift, and go to state 197
    ')'    shift, and go to state 367


State 362

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement . M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 368


State 363

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 369


State 364

  198 selection_statement: IF '(' expression N ')' M statement N .
  199                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 370

    $default  reduce using rule 198 (selection_statement)


State 365

  201 iteration_statement: WHILE W '(' X changetable M expression ')' . M loop_statement
  202                    | WHILE W '(' X changetable M expression ')' . '{' M block_item_list_opt '}'

    '{'  shift, and go to state 371

    $default  reduce using rule 1 (M)

    M  go to state 372


State 366

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' . expression ')' SEMICOLON

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 373


State 367

  203 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 374


State 368

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M . expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 375


State 369

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 73
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 376


State 370

  199 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 377


State 371

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' . M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 378


State 372

  201 iteration_statement: WHILE W '(' X changetable M expression ')' M . loop_statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    loop_statement             go to state 379
    labeled_statement          go to state 326
    expression_statement       go to state 327
    selection_statement        go to state 328
    iteration_statement        go to state 329
    jump_statement             go to state 330


State 373

   85 expression: expression . COMMA assignment_expression
  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression . ')' SEMICOLON

    COMMA  shift, and go to state 197
    ')'    shift, and go to state 380


State 374

  203 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' SEMICOLON .

    $default  reduce using rule 203 (iteration_statement)


State 375

   85 expression: expression . COMMA assignment_expression
  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression . N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 381


State 376

   85 expression: expression . COMMA assignment_expression
  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 382


State 377

  199 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    statement                  go to state 383
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 378

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M . block_item_list_opt '}'

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    $default  reduce using rule 193 (block_item_list_opt)

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list            go to state 255
    block_item_list_opt        go to state 384
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 379

  201 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement .

    $default  reduce using rule 201 (iteration_statement)


State 380

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 385


State 381

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N . ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 386


State 382

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 387


State 383

  199 selection_statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 199 (selection_statement)


State 384

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt . '}'

    '}'  shift, and go to state 388


State 385

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON .

    $default  reduce using rule 204 (iteration_statement)


State 386

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' . M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 389


State 387

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 390


State 388

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}' .

    $default  reduce using rule 202 (iteration_statement)


State 389

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M . loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 391
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    loop_statement             go to state 392
    labeled_statement          go to state 326
    expression_statement       go to state 327
    selection_statement        go to state 328
    iteration_statement        go to state 329
    jump_statement             go to state 330


State 390

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 73
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 393
    '!'                 shift, and go to state 88

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    loop_statement             go to state 394
    labeled_statement          go to state 326
    expression_statement       go to state 327
    selection_statement        go to state 328
    iteration_statement        go to state 329
    jump_statement             go to state 330


State 391

  207 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    $default  reduce using rule 193 (block_item_list_opt)

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list            go to state 255
    block_item_list_opt        go to state 395
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 392

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 205 (iteration_statement)


State 393

  208 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHARACTER_CONSTANT  shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    INC                 shift, and go to state 79
    DEC                 shift, and go to state 80
    MUL                 shift, and go to state 81
    ADD                 shift, and go to state 82
    SUB                 shift, and go to state 83
    BITWISE_NOT         shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    SEMICOLON           shift, and go to state 248
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 249
    '!'                 shift, and go to state 88

    $default  reduce using rule 193 (block_item_list_opt)

    primary_expression         go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 125
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list            go to state 255
    block_item_list_opt        go to state 396
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 394

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 206 (iteration_statement)


State 395

  207 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 397


State 396

  208 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 398


State 397

  207 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 207 (iteration_statement)


State 398

  208 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 208 (iteration_statement)
